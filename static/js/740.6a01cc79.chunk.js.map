{"version":3,"file":"static/js/740.6a01cc79.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/contlist/list.module.css?ba5c","components/contlist/list.jsx","webpack://react-homework-template/./src/components/contform/form.module.css?84bd","components/contform/form.jsx","components/filter/filter.jsx","components/pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"llist\":\"list_llist__joQbm\",\"item\":\"list_item__x+7+D\",\"bbtn\":\"list_bbtn__NGP1o\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../redux/contactsSlice';\nimport { selectFilterContact } from '../redux/selectors';\nimport lcss from \"../contlist/list.module.css\";\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectFilterContact);\n \n\n  return (\n    \n    <ul className={lcss.llist}>\n        {contacts.map(contact => (\n          <li className={lcss.item} key={contact.id}>\n            {contact.name}: {contact.number}\n            {(\n                <button\n                  className={lcss.bbtn}\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(contact.id))}\n                >\n                  Delete\n                </button>\n              \n            )}\n          </li>\n        ))}\n      </ul>\n      \n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"ptitle\":\"form_ptitle__QTxBS\",\"pform\":\"form_pform__-Zlmu\",\"plabel\":\"form_plabel__lKBZE\",\"pinput\":\"form_pinput__DGgHs\",\"pbtn\":\"form_pbtn__3d8pE\",\"ctitle\":\"form_ctitle__9HPqs\",\"clabel\":\"form_clabel__B1qyT\",\"cinput\":\"form_cinput__rCplS\"};","import React, { useState } from \"react\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport fcss from \"../contform/form.module.css\";\nimport { selectContacts } from \"../redux/selectors\";\nimport { addContact } from \"../redux/contactsSlice\";\n\n export const ContactForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(selectContacts);\n\n   const handleSubmit = (event) => {\n     event.preventDefault();\n\n     const isDuplicateContact = contacts.some(\n       (contact) => contact.name === name || contact.number === number\n     );\n\n     if (isDuplicateContact) {\n       alert(`${name} is already in contacts`);\n       return;\n     }\n\n     dispatch(addContact({name, number } ));\n  setName(\"\");\n  setNumber(\"\");\n};\n    \n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"name\") {\n      setName(value);\n    } else if (name === \"number\") {\n      setNumber(value);\n    }\n  };\n\n  return (\n     \n    <form className={fcss.pform} onSubmit={handleSubmit}>\n      <label className={fcss.plabel} htmlFor=\"nameInput\">\n        Name\n        <input\n          className={fcss.pinput}\n          id=\"nameInput\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={fcss.plabel} htmlFor=\"numberInput\">\n        Number\n        <input\n          className={fcss.pinput}\n          id=\"numberInput\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={fcss.pbtn} type=\"submit\">\n        Add contact\n      </button>\n      </form>\n\n  );\n};\n\n\n\n\n\n","\nimport React from \"react\";\nimport pcss from \"../contform/form.module.css\";\nimport { change } from '../redux/filterSlice'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {selectFilter} from '../redux/selectors'\n\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch()\n\n  const changeFilter = event => {\n    dispatch(change(event.currentTarget.value));\n  };\n\n   const value = useSelector(selectFilter)\n\n  return (\n    \n    <label className={pcss.clabel} htmlFor=\"filterInput\">\n      Find contacts by name:\n      <input\n        className={pcss.cinput}\n        id=\"filterInput\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={changeFilter}\n      />\n    </label>\n    \n  );\n};","import { ContactList } from '../contlist/list';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n} from '../redux/selectors';\nimport { fetchContacts } from '../redux/contactsSlice';\nimport { ContactForm } from '../contform/form';\nimport { Filter } from '../filter/filter';\nimport css from '../contform/form.module.css'\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n//   const loading = useSelector(selectLoading);\n//   const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1 className={css.ptitle}>Phonebook</h1>\n      <ContactForm />\n\n      <h2 className={css.ctitle}>Contacts</h2>\n      \n      <Filter />\n      {contacts.length !== 0 && <ContactList />}\n      \n    </div>\n  );\n};\n\nexport default ContactsPage;"],"names":["ContactList","dispatch","useDispatch","contacts","useSelector","selectFilterContact","_jsx","className","lcss","children","map","contact","_jsxs","name","number","type","onClick","deleteContact","id","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","selectContacts","handleInputChange","event","_event$target","target","value","fcss","onSubmit","preventDefault","some","alert","concat","addContact","htmlFor","onChange","pattern","title","required","Filter","selectFilter","pcss","change","currentTarget","useEffect","fetchContacts","css","length"],"sourceRoot":""}